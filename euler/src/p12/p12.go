/*********
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
*********/

package main

import "math"

func nthTrigNum(n int) int {
	ret := 0
	for i := 1; i <= n; i++ {
		ret += i
	}

	return ret
}

func getNumOfDivisors(n int) int {
	numOfDivs := 0
	for i := 1; i < int(math.Sqrt(float64(n)))+1; i++ {
		if n%i == 0 {
			if i != n/i {
				numOfDivs += 2
			} else {
				numOfDivs += 1
			}
		}
	}

	return numOfDivs
}

func firstTrigNumWithMoreThanNDivisors(n int) int {
	for i := 1; ; i++ {
		trigNum := nthTrigNum(i)
		if getNumOfDivisors(trigNum) > n {
			return trigNum
		}
	}
}
